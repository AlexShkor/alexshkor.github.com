<!DOCTYPE html>
<!-- saved from url=(0062)http://twitter.github.io/bootstrap/examples/justified-nav.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <title>Alex Shkor</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Alex Shkor's personal page.">
    <meta name="author" content="Alex Shkor">

    <!-- Le styles -->
    <link href="/css/bootstrap.css" rel="stylesheet">
    
    <link href="/css/bootstrap-responsive.css" rel="stylesheet">

    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="../assets/js/html5shiv.js"></script>
    <![endif]-->

    <!-- Fav and touch icons -->
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="http://twitter.github.io/bootstrap/assets/ico/apple-touch-icon-144-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="http://twitter.github.io/bootstrap/assets/ico/apple-touch-icon-114-precomposed.png">
      <link rel="apple-touch-icon-precomposed" sizes="72x72" href="http://twitter.github.io/bootstrap/assets/ico/apple-touch-icon-72-precomposed.png">
                    <link rel="apple-touch-icon-precomposed" href="http://twitter.github.io/bootstrap/assets/ico/apple-touch-icon-57-precomposed.png">
                                   <link rel="shortcut icon" href="http://twitter.github.io/bootstrap/assets/ico/favicon.png">
  

  <body>

    <div class="container">

      <div class="masthead">
        <h3 class="muted">Alex Shkor</h3>
        <div class="navbar">
          <div class="navbar-inner">
            <div class="container">
              <ul class="nav">
                <li ><a href="index.htm">Home</a></li>
                <li class="active"><a href="blog.htm">Blog</a></li>
                <li><a href="#">Services</a></li>
                <li><a href="#">Downloads</a></li>
                <li><a href="#">About</a></li>
                <li><a href="#">Contact</a></li>
              </ul>
            </div>
          </div>
        </div><!-- /.navbar -->
      </div>
      <!-- Example row of columns -->
        <div class="row-fluid">
              <h3>Введение в CQRS + Event Sourcing: Часть 2</h3>
            <p>
  	В <a href="/posts/cqrs_and_es_part1.htm">прошлой статье</a> я начал с основ CQRS + Event Sourcing. В этот раз я предлагаю продолжить и более подробно посмотреть на ES.<br>
<br>
В <a href="https://github.com/AlexShkor/CQRS-Event-Sourcing-Sample--ASP.NET-MVC-">примере</a> который я выкладывал с моей прошлой статьей магия Event Sourcing’а была скрыта за абстракцией IRepository и двумя методами IRepository.Save() и IRepository.GetById&lt;&gt;(). <br>
Для того чтобы поподробнее разобраться что происходит я решил рассказать о процессе сохранения и загрузки агрегата из Event Store на примере проекта <a href="https://github.com/Lokad/lokad-iddd-sample">Lokad IDDD Sample</a> от Рината Абдулина. У него в аппликейшен сервисах идет прямое обращение к Event Store, без дополнительных абстракций, поэтому все выглядит очень наглядно. Application Service — это аналог CommandHandler, но который обрабатывает все комманды одного агрегата. Такой подход очень удобный и мы тоже на него в одном проекте перешли.<br>
 
  	
  		
  		
  	
            </p>
            <p><a class="btn" href="/posts/cqrs_and_es_part2.htm">Далее »</a></p>
      </div>
        
        <div class="row-fluid">
              <h3>Введение в CQRS + Event Sourcing: Часть 1. Основы</h3>
              <p>В первый раз я услышал о CQRS, когда устроился на новую работу. В компании, в которой работаю и по сей день, мне сразу сказали что на проекте над которым я буду работать используется CQRS, Event Sourcing, и MongoDB в качестве базы данных. И этого всего я слышал только о MongoDB. Попытавшись вникнуть в CQRS, я не сразу понял все тонкости данного подхода, но почему-то мне понравилась идея разделения модели взаимодействия с данными на две — read и write. Возможно потому что она как-то перекликалась с парадигмой программирования “разделение обязанностей”, возможно потому что была очень в духе DDD.</p>
              <p><a class="btn" href="/posts/cqrs_and_es_part1.htm">Далее »</a></p>
      </div>
      <hr>

      <div class="footer">
        <p>© Alex Shkor 2013</p>
      </div>

    </div> <!-- /container -->

    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="/scripts/jquery.js"></script>
    <script src="/scripts/bootstrap-transition.js"></script>
    <script src="/scripts/bootstrap-alert.js"></script>
    <script src="/scripts/bootstrap-modal.js"></script>
    <script src="/scripts/bootstrap-dropdown.js"></script>
    <script src="/scripts/bootstrap-scrollspy.js"></script>
    <script src="/scripts/bootstrap-tab.js"></script>
    <script src="/scripts/bootstrap-tooltip.js"></script>
    <script src="/scripts/bootstrap-popover.js"></script>
    <script src="/scripts/bootstrap-button.js"></script>
    <script src="/scripts/bootstrap-collapse.js"></script>
    <script src="/scripts/bootstrap-carousel.js"></script>
    <script src="/scripts/bootstrap-typeahead.js"></script>

  

</body></html>